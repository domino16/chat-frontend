@use "@angular/material" as mat;

@import "src/styles/colors";

:host {
  display: flex;
  flex-direction: column;
  text-align: center;
  margin-top: 50px;
  color: $white;
}

h1{
  margin: 5px 0 10px;
}

img {
  width: 90px;
  height: 90px;
  margin: 0 auto;
  cursor: pointer;
}

form {display: flex;
  flex-direction: column;
  align-self: center;
  max-width: 400px;
  width: 100%;
  padding: 10px 20px;
}

p {
  font-size: 1.6rem;
  color: $primary-color;
  text-decoration: underline;
  margin-left: 1em;
  cursor: pointer;
}

.error-msg {
  display: flex;
  align-items: center;
  margin: 5px 0 20px 0;
  padding: 10px;
  border-radius: 3px 3px 3px 3px;
  background-color: #f74646;
  text-align: left;
  font-size: 1.6rem;

  mat-icon{
display: flex;
align-items: center;
justify-content: center;
    font-size: 20px;
  }
}

input {
  color: $white !important;
}

// styles for untouched input
::ng-deep .mdc-text-field .mdc-floating-label {
  color: $white !important;
}

::ng-deep .mdc-notched-outline > * {
  border-color: $white !important;
}

// styles for untouched input
::ng-deep .mdc-text-field--focused .mdc-notched-outline > * {
  border-color: $primary-color !important;
}

::ng-deep .mdc-text-field--focused .mdc-floating-label > * {
  color: $primary-color !important;
}

//styles for invalid input

//get color from material red-pallete
$matWarnPallete: mat.define-palette(mat.$red-palette);

::ng-deep .mdc-text-field--invalid .mdc-notched-outline > * {
  border-color: mat.get-color-from-palette($matWarnPallete, 500) !important;
}

::ng-deep .mdc-text-field--invalid .mdc-floating-label > * {
  color: mat.get-color-from-palette($matWarnPallete, 500) !important;
}

//checkbox styles
.checkbox-wrapper {
  align-self: flex-start;
  margin: 0 0 20px;
  color: white;
}

.checkbox-wrapper span {
  
  font-size: 1.6rem;
 margin-left: 10px;
  color: white;

  a {
    color: $primary-color;
    text-decoration: underline;
  }
}

.checkbox-wrapper input[type="checkbox"] {
  display: none;
  visibility: hidden;
}

.checkbox-wrapper label {
  display: inline-block;
}

.checkbox-wrapper .check {
  cursor: pointer;
  position: relative;
  margin: auto;
  width: 180px;
  height: 18px;
  -webkit-tap-highlight-color: transparent;
  transform: translate3d(0, 0, 0);
}

.checkbox-wrapper .check::before {
  content: "";
  position: absolute;
  top: -15px;
  left: -15px;
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background: rgb(34 50 84 / 3%);
  opacity: 0;
  transition: opacity 0.2s ease;
}

.checkbox-wrapper .check svg {
  position: relative;
  top: 4px;
  z-index: 1;
  fill: none;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke: #c8ccd4;
  stroke-width: 1.5;
  transform: translate3d(0, 0, 0);
  transition: all 0.2s ease;
}

.checkbox-wrapper .check svg path {
  stroke-dasharray: 60;
  stroke-dashoffset: 0;
}

.checkbox-wrapper .check svg polyline {
  stroke-dasharray: 22;
  stroke-dashoffset: 66;
}

.checkbox-wrapper .check:hover::before {
  opacity: 1;
}

.checkbox-wrapper .check:hover svg {
  stroke: $primary-color;
}

.checkbox-wrapper input[type="checkbox"]:checked + .check svg {
  stroke: $primary-color;
}

.checkbox-wrapper input[type="checkbox"]:checked + .check svg path {
  stroke-dashoffset: 60;
  transition: all 0.3s linear;
}

.checkbox-wrapper input[type="checkbox"]:checked + .check svg polyline {
  stroke-dashoffset: 42;
  transition: all 0.2s linear;
  transition-delay: 0.15s;
}

.signup-buttons-wrapper{
  display: flex;
  justify-content: center;
  align-items: center;
}

app-footer {
  margin-top: 20px;
width: 100%;
text-align:left;
}
